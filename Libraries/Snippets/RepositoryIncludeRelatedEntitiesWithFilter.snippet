<?xml version="1.0" encoding="utf-8"?>
<CodeSnippets xmlns="http://schemas.microsoft.com/VisualStudio/2005/CodeSnippet">
  <CodeSnippet Format="1.0.0">
    <Header>
      <Title>Método de repositório para retornar entidades com filhos relacionados filtrados.</Title>
      <Author>Myframework</Author>
      <Description></Description>
      <Shortcut>repositoryLinqEFGetEntityWithRelatedChildsFiltered</Shortcut>
    </Header>
    <Snippet>
      <Imports>
        <Import>
          <Namespace>Myframework.Libraries.Infra.Data</Namespace>
        </Import>
        <Import>
          <Namespace>Microsoft.EntityFrameworkCore</Namespace>
        </Import>
        <Import>
          <Namespace>System</Namespace>
        </Import>
        <Import>
          <Namespace>System.Linq</Namespace>
        </Import>
        <Import>
          <Namespace>System.Linq.Expressions</Namespace>
        </Import>
        <Import>
          <Namespace>System.Threading.Tasks</Namespace>
        </Import>        
      </Imports>
      <Declarations>
        <Literal>
          <ID>entity</ID>
          <ToolTip>Entity.</ToolTip>
          <Default>Entity</Default>
        </Literal>
      </Declarations>
      <Code Language="CSharp">
        <![CDATA[
          public async Task<List<TEntity>> GetEntityWithRelatedChildsFilteredAsync(int propChildItemFilter)
          {
             var list = await context.Entities
                .Select(it =>
                    new
                    {
                        Entity = it,
                        ChildItensFiltered = it.EntitiesChilds.Where(it => it.ChildProp1 == propChildItemFilter).ToList()
                    })
                .ToListAsync();

            return list.Select(it => it.Entity).ToList();
          }
        ]]>
      </Code>
    </Snippet>
  </CodeSnippet>
</CodeSnippets>

