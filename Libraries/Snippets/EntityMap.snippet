<?xml version="1.0" encoding="utf-8"?>
<CodeSnippets xmlns="http://schemas.microsoft.com/VisualStudio/2005/CodeSnippet">
  <CodeSnippet Format="1.0.0">
    <Header>
      <Title>Classe de map de entidade.</Title>
      <Author>Myframework</Author>
      <Description></Description>
      <Shortcut>mapEntity</Shortcut>
    </Header>
    <Snippet>
      <Imports>
        <Import>
          <Namespace>Microsoft.EntityFrameworkCore</Namespace>
        </Import>
        <Import>
          <Namespace>Microsoft.EntityFrameworkCore.Metadata.Builders</Namespace>
        </Import>
      </Imports>
      <Declarations>
        <Literal>
          <ID>entity</ID>
          <ToolTip>Entity.</ToolTip>
          <Default>Entity</Default>
        </Literal>
      </Declarations>
      <Code Language="CSharp">
        <![CDATA[
          internal class $entity$Map : IEntityTypeConfiguration<$entity$>
          {
              public void Configure(EntityTypeBuilder<$entity$> builder)
              {
                  builder.ToTable("$entity$");

                  builder.HasKey(it => it.Id);
                  builder.Ignore(it => it.DomainEvents);

                  builder.Property(it => it.Id).HasColumnName("Id").IsRequired();
                  builder.Property(it => it.Name).HasColumnName("Name").HasColumnType("varchar(256)").IsRequired();

                  builder.Metadata.FindNavigation(nameof($entity$.ChildItens)).SetPropertyAccessMode(PropertyAccessMode.Field);

                  builder.HasMany(it => it.ChildItens).WithOne().HasForeignKey(it => it.$entity$Id).OnDelete(DeleteBehavior.Restrict);
              }
          }
        ]]>
      </Code>
    </Snippet>
  </CodeSnippet>
</CodeSnippets>

